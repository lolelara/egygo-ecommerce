function k(n,e,i,t){function o(c){return c instanceof i?c:new i(function(a){a(c)})}return new(i||(i=Promise))(function(c,a){function s(p){try{r(t.next(p))}catch(u){a(u)}}function d(p){try{r(t.throw(p))}catch(u){a(u)}}function r(p){p.done?c(p.value):o(p.value).then(s,d)}r((t=t.apply(n,[])).next())})}function W(n,e,i,t){if(typeof e=="function"?n!==e||!t:!e.has(n))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?t:i==="a"?t.call(n):t?t.value:e.get(n)}class l{constructor(e,i,t){this.method=e,this.attribute=i,t!==void 0&&(Array.isArray(t)?this.values=t:this.values=[t])}toString(){return JSON.stringify({method:this.method,attribute:this.attribute,values:this.values})}}l.equal=(n,e)=>new l("equal",n,e).toString();l.notEqual=(n,e)=>new l("notEqual",n,e).toString();l.lessThan=(n,e)=>new l("lessThan",n,e).toString();l.lessThanEqual=(n,e)=>new l("lessThanEqual",n,e).toString();l.greaterThan=(n,e)=>new l("greaterThan",n,e).toString();l.greaterThanEqual=(n,e)=>new l("greaterThanEqual",n,e).toString();l.isNull=n=>new l("isNull",n).toString();l.isNotNull=n=>new l("isNotNull",n).toString();l.between=(n,e,i)=>new l("between",n,[e,i]).toString();l.startsWith=(n,e)=>new l("startsWith",n,e).toString();l.endsWith=(n,e)=>new l("endsWith",n,e).toString();l.select=n=>new l("select",void 0,n).toString();l.search=(n,e)=>new l("search",n,e).toString();l.orderDesc=n=>new l("orderDesc",n).toString();l.orderAsc=n=>new l("orderAsc",n).toString();l.orderRandom=()=>new l("orderRandom").toString();l.cursorAfter=n=>new l("cursorAfter",void 0,n).toString();l.cursorBefore=n=>new l("cursorBefore",void 0,n).toString();l.limit=n=>new l("limit",void 0,n).toString();l.offset=n=>new l("offset",void 0,n).toString();l.contains=(n,e)=>new l("contains",n,e).toString();l.notContains=(n,e)=>new l("notContains",n,e).toString();l.notSearch=(n,e)=>new l("notSearch",n,e).toString();l.notBetween=(n,e,i)=>new l("notBetween",n,[e,i]).toString();l.notStartsWith=(n,e)=>new l("notStartsWith",n,e).toString();l.notEndsWith=(n,e)=>new l("notEndsWith",n,e).toString();l.createdBefore=n=>new l("createdBefore",void 0,n).toString();l.createdAfter=n=>new l("createdAfter",void 0,n).toString();l.createdBetween=(n,e)=>new l("createdBetween",void 0,[n,e]).toString();l.updatedBefore=n=>new l("updatedBefore",void 0,n).toString();l.updatedAfter=n=>new l("updatedAfter",void 0,n).toString();l.updatedBetween=(n,e)=>new l("updatedBetween",void 0,[n,e]).toString();l.or=n=>new l("or",void 0,n.map(e=>JSON.parse(e))).toString();l.and=n=>new l("and",void 0,n.map(e=>JSON.parse(e))).toString();l.distanceEqual=(n,e,i,t=!0)=>new l("distanceEqual",n,[[e,i,t]]).toString();l.distanceNotEqual=(n,e,i,t=!0)=>new l("distanceNotEqual",n,[[e,i,t]]).toString();l.distanceGreaterThan=(n,e,i,t=!0)=>new l("distanceGreaterThan",n,[[e,i,t]]).toString();l.distanceLessThan=(n,e,i,t=!0)=>new l("distanceLessThan",n,[[e,i,t]]).toString();l.intersects=(n,e)=>new l("intersects",n,[e]).toString();l.notIntersects=(n,e)=>new l("notIntersects",n,[e]).toString();l.crosses=(n,e)=>new l("crosses",n,[e]).toString();l.notCrosses=(n,e)=>new l("notCrosses",n,[e]).toString();l.overlaps=(n,e)=>new l("overlaps",n,[e]).toString();l.notOverlaps=(n,e)=>new l("notOverlaps",n,[e]).toString();l.touches=(n,e)=>new l("touches",n,[e]).toString();l.notTouches=(n,e)=>new l("notTouches",n,[e]).toString();class f extends Error{constructor(e,i=0,t="",o=""){super(e),this.name="AppwriteException",this.message=e,this.code=i,this.type=t,this.response=o}}class b{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:"",devkey:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"20.1.0","X-Appwrite-Response-Format":"1.8.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=window==null?void 0:window.setTimeout(()=>{this.realtime.createSocket()},50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=window==null?void 0:window.setInterval(()=>{var e;(e=this.realtime.socket)===null||e===void 0||e.send(JSON.stringify({type:"ping"}))},2e4)},createSocket:()=>{var e,i,t;if(this.realtime.channels.size<1){this.realtime.reconnect=!1,(e=this.realtime.socket)===null||e===void 0||e.close();return}const o=new URLSearchParams;o.set("project",this.config.project),this.realtime.channels.forEach(a=>{o.append("channels[]",a)});const c=this.config.endpointRealtime+"/realtime?"+o.toString();(c!==this.realtime.url||!this.realtime.socket||((i=this.realtime.socket)===null||i===void 0?void 0:i.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&((t=this.realtime.socket)===null||t===void 0?void 0:t.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=c,this.realtime.socket=new WebSocket(c),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",a=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()}),this.realtime.socket.addEventListener("close",a=>{var s,d,r;if(!this.realtime.reconnect||((d=(s=this.realtime)===null||s===void 0?void 0:s.lastMessage)===null||d===void 0?void 0:d.type)==="error"&&((r=this.realtime)===null||r===void 0?void 0:r.lastMessage.data).code===1008){this.realtime.reconnect=!0;return}const p=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${p/1e3} seconds.`,a.reason),setTimeout(()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()},p)}))},onMessage:e=>{var i,t;try{const o=JSON.parse(e.data);switch(this.realtime.lastMessage=o,o.type){case"connected":const c=JSON.parse((i=window.localStorage.getItem("cookieFallback"))!==null&&i!==void 0?i:"{}"),a=c==null?void 0:c[`a_session_${this.config.project}`],s=o.data;a&&!s.user&&((t=this.realtime.socket)===null||t===void 0||t.send(JSON.stringify({type:"authentication",data:{session:a}})));break;case"event":let d=o.data;if(d!=null&&d.channels){if(!d.channels.some(p=>this.realtime.channels.has(p)))return;this.realtime.subscriptions.forEach(p=>{d.channels.some(u=>p.channels.includes(u))&&setTimeout(()=>p.callback(d))})}break;case"pong":break;case"error":throw o.data;default:break}}catch(o){console.error(o)}},cleanUp:e=>{this.realtime.channels.forEach(i=>{e.includes(i)&&(Array.from(this.realtime.subscriptions).some(([o,c])=>c.channels.includes(i))||this.realtime.channels.delete(i))})}}}setEndpoint(e){if(!e.startsWith("http://")&&!e.startsWith("https://"))throw new f("Invalid endpoint URL: "+e);return this.config.endpoint=e,this.config.endpointRealtime=e.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(e){if(!e.startsWith("ws://")&&!e.startsWith("wss://"))throw new f("Invalid realtime endpoint URL: "+e);return this.config.endpointRealtime=e,this}setProject(e){return this.headers["X-Appwrite-Project"]=e,this.config.project=e,this}setJWT(e){return this.headers["X-Appwrite-JWT"]=e,this.config.jwt=e,this}setLocale(e){return this.headers["X-Appwrite-Locale"]=e,this.config.locale=e,this}setSession(e){return this.headers["X-Appwrite-Session"]=e,this.config.session=e,this}setDevKey(e){return this.headers["X-Appwrite-Dev-Key"]=e,this.config.devkey=e,this}subscribe(e,i){let t=typeof e=="string"?[e]:e;t.forEach(c=>this.realtime.channels.add(c));const o=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(o,{channels:t,callback:i}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(o),this.realtime.cleanUp(t),this.realtime.connect()}}prepareRequest(e,i,t={},o={}){if(e=e.toUpperCase(),t=Object.assign({},this.headers,t),typeof window<"u"&&window.localStorage){const a=window.localStorage.getItem("cookieFallback");a&&(t["X-Fallback-Cookies"]=a)}let c={method:e,headers:t};if(t["X-Appwrite-Dev-Key"]===void 0&&(c.credentials="include"),e==="GET")for(const[a,s]of Object.entries(b.flatten(o)))i.searchParams.append(a,s);else switch(t["content-type"]){case"application/json":c.body=JSON.stringify(o);break;case"multipart/form-data":const a=new FormData;for(const[s,d]of Object.entries(o))if(d instanceof File)a.append(s,d,d.name);else if(Array.isArray(d))for(const r of d)a.append(`${s}[]`,r);else a.append(s,d);c.body=a,delete t["content-type"];break}return{uri:i.toString(),options:c}}chunkedUpload(e,i,t={},o={},c){var a;return k(this,void 0,void 0,function*(){const[s,d]=(a=Object.entries(o).find(([u,y])=>y instanceof File))!==null&&a!==void 0?a:[];if(!d||!s)throw new Error("File not found in payload");if(d.size<=b.CHUNK_SIZE)return yield this.call(e,i,t,o);let r=0,p=null;for(;r<d.size;){let u=r+b.CHUNK_SIZE;u>=d.size&&(u=d.size),t["content-range"]=`bytes ${r}-${u-1}/${d.size}`;const y=d.slice(r,u);let h=Object.assign({},o);h[s]=new File([y],d.name),p=yield this.call(e,i,t,h),c&&typeof c=="function"&&c({$id:p.$id,progress:Math.round(u/d.size*100),sizeUploaded:u,chunksTotal:Math.ceil(d.size/b.CHUNK_SIZE),chunksUploaded:Math.ceil(u/b.CHUNK_SIZE)}),p&&p.$id&&(t["x-appwrite-id"]=p.$id),r=u}return p})}ping(){return k(this,void 0,void 0,function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))})}call(e,i,t={},o={},c="json"){var a,s;return k(this,void 0,void 0,function*(){const{uri:d,options:r}=this.prepareRequest(e,i,t,o);let p=null;const u=yield fetch(d,r);if(u.type==="opaque")throw new f(`Invalid Origin. Register your new client (${window.location.host}) as a new Web platform on your project console dashboard`,403,"forbidden","");const y=u.headers.get("x-appwrite-warning");if(y&&y.split(";").forEach(I=>console.warn("Warning: "+I)),!((a=u.headers.get("content-type"))===null||a===void 0)&&a.includes("application/json")?p=yield u.json():c==="arrayBuffer"?p=yield u.arrayBuffer():p={message:yield u.text()},400<=u.status){let I="";throw!((s=u.headers.get("content-type"))===null||s===void 0)&&s.includes("application/json")||c==="arrayBuffer"?I=JSON.stringify(p):I=p==null?void 0:p.message,new f(p==null?void 0:p.message,u.status,p==null?void 0:p.type,I)}const h=u.headers.get("X-Fallback-Cookies");return typeof window<"u"&&window.localStorage&&h&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",h)),p})}static flatten(e,i=""){let t={};for(const[o,c]of Object.entries(e)){let a=i?i+"["+o+"]":o;Array.isArray(c)?t=Object.assign(Object.assign({},t),b.flatten(c,a)):t[a]=c}return t}}b.CHUNK_SIZE=1024*1024*5;class m{constructor(e){this.client=e}static flatten(e,i=""){let t={};for(const[o,c]of Object.entries(e)){let a=i?i+"["+o+"]":o;Array.isArray(c)?t=Object.assign(Object.assign({},t),m.flatten(c,a)):t[a]=c}return t}}m.CHUNK_SIZE=5*1024*1024;class C{constructor(e){this.client=e}get(){const e="/account",i={},t=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",t,o,i)}create(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,email:i[0],password:i[1],name:i[2]};const o=t.userId,c=t.email,a=t.password,s=t.name;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "email"');if(typeof a>"u")throw new f('Missing required parameter: "password"');const d="/account",r={};typeof o<"u"&&(r.userId=o),typeof c<"u"&&(r.email=c),typeof a<"u"&&(r.password=a),typeof s<"u"&&(r.name=s);const p=new URL(this.client.config.endpoint+d),u={"content-type":"application/json"};return this.client.call("post",p,u,r)}updateEmail(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={email:e,password:i[0]};const o=t.email,c=t.password;if(typeof o>"u")throw new f('Missing required parameter: "email"');if(typeof c>"u")throw new f('Missing required parameter: "password"');const a="/account/email",s={};typeof o<"u"&&(s.email=o),typeof c<"u"&&(s.password=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("patch",d,r,s)}listIdentities(e){let i;!e||e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={queries:e};const t=i.queries,o="/account/identities",c={};typeof t<"u"&&(c.queries=t);const a=new URL(this.client.config.endpoint+o),s={};return this.client.call("get",a,s,c)}deleteIdentity(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={identityId:e};const t=i.identityId;if(typeof t>"u")throw new f('Missing required parameter: "identityId"');const o="/account/identities/{identityId}".replace("{identityId}",t),c={},a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("delete",a,s,c)}createJWT(){const e="/account/jwts",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",t,o,i)}listLogs(e){let i;!e||e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={queries:e};const t=i.queries,o="/account/logs",c={};typeof t<"u"&&(c.queries=t);const a=new URL(this.client.config.endpoint+o),s={};return this.client.call("get",a,s,c)}updateMFA(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={mfa:e};const t=i.mfa;if(typeof t>"u")throw new f('Missing required parameter: "mfa"');const o="/account/mfa",c={};typeof t<"u"&&(c.mfa=t);const a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("patch",a,s,c)}createMfaAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const t=i.type;if(typeof t>"u")throw new f('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",t),c={},a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("post",a,s,c)}createMFAAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const t=i.type;if(typeof t>"u")throw new f('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",t),c={},a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("post",a,s,c)}updateMfaAuthenticator(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?t=e||{}:t={type:e,otp:i[0]};const o=t.type,c=t.otp;if(typeof o>"u")throw new f('Missing required parameter: "type"');if(typeof c>"u")throw new f('Missing required parameter: "otp"');const a="/account/mfa/authenticators/{type}".replace("{type}",o),s={};typeof c<"u"&&(s.otp=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}updateMFAAuthenticator(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?t=e||{}:t={type:e,otp:i[0]};const o=t.type,c=t.otp;if(typeof o>"u")throw new f('Missing required parameter: "type"');if(typeof c>"u")throw new f('Missing required parameter: "otp"');const a="/account/mfa/authenticators/{type}".replace("{type}",o),s={};typeof c<"u"&&(s.otp=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}deleteMfaAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const t=i.type;if(typeof t>"u")throw new f('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",t),c={},a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("delete",a,s,c)}deleteMFAAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const t=i.type;if(typeof t>"u")throw new f('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",t),c={},a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("delete",a,s,c)}createMfaChallenge(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"factor"in e?i=e||{}:i={factor:e};const t=i.factor;if(typeof t>"u")throw new f('Missing required parameter: "factor"');const o="/account/mfa/challenge",c={};typeof t<"u"&&(c.factor=t);const a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("post",a,s,c)}createMFAChallenge(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"factor"in e?i=e||{}:i={factor:e};const t=i.factor;if(typeof t>"u")throw new f('Missing required parameter: "factor"');const o="/account/mfa/challenge",c={};typeof t<"u"&&(c.factor=t);const a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("post",a,s,c)}updateMfaChallenge(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={challengeId:e,otp:i[0]};const o=t.challengeId,c=t.otp;if(typeof o>"u")throw new f('Missing required parameter: "challengeId"');if(typeof c>"u")throw new f('Missing required parameter: "otp"');const a="/account/mfa/challenge",s={};typeof o<"u"&&(s.challengeId=o),typeof c<"u"&&(s.otp=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}updateMFAChallenge(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={challengeId:e,otp:i[0]};const o=t.challengeId,c=t.otp;if(typeof o>"u")throw new f('Missing required parameter: "challengeId"');if(typeof c>"u")throw new f('Missing required parameter: "otp"');const a="/account/mfa/challenge",s={};typeof o<"u"&&(s.challengeId=o),typeof c<"u"&&(s.otp=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}listMfaFactors(){const e="/account/mfa/factors",i={},t=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",t,o,i)}listMFAFactors(){const e="/account/mfa/factors",i={},t=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",t,o,i)}getMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},t=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",t,o,i)}getMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},t=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",t,o,i)}createMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",t,o,i)}createMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",t,o,i)}updateMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",t,o,i)}updateMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",t,o,i)}updateName(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={name:e};const t=i.name;if(typeof t>"u")throw new f('Missing required parameter: "name"');const o="/account/name",c={};typeof t<"u"&&(c.name=t);const a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("patch",a,s,c)}updatePassword(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={password:e,oldPassword:i[0]};const o=t.password,c=t.oldPassword;if(typeof o>"u")throw new f('Missing required parameter: "password"');const a="/account/password",s={};typeof o<"u"&&(s.password=o),typeof c<"u"&&(s.oldPassword=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("patch",d,r,s)}updatePhone(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={phone:e,password:i[0]};const o=t.phone,c=t.password;if(typeof o>"u")throw new f('Missing required parameter: "phone"');if(typeof c>"u")throw new f('Missing required parameter: "password"');const a="/account/phone",s={};typeof o<"u"&&(s.phone=o),typeof c<"u"&&(s.password=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("patch",d,r,s)}getPrefs(){const e="/account/prefs",i={},t=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",t,o,i)}updatePrefs(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"prefs"in e?i=e||{}:i={prefs:e};const t=i.prefs;if(typeof t>"u")throw new f('Missing required parameter: "prefs"');const o="/account/prefs",c={};typeof t<"u"&&(c.prefs=t);const a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("patch",a,s,c)}createRecovery(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={email:e,url:i[0]};const o=t.email,c=t.url;if(typeof o>"u")throw new f('Missing required parameter: "email"');if(typeof c>"u")throw new f('Missing required parameter: "url"');const a="/account/recovery",s={};typeof o<"u"&&(s.email=o),typeof c<"u"&&(s.url=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("post",d,r,s)}updateRecovery(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,secret:i[0],password:i[1]};const o=t.userId,c=t.secret,a=t.password;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "secret"');if(typeof a>"u")throw new f('Missing required parameter: "password"');const s="/account/recovery",d={};typeof o<"u"&&(d.userId=o),typeof c<"u"&&(d.secret=c),typeof a<"u"&&(d.password=a);const r=new URL(this.client.config.endpoint+s),p={"content-type":"application/json"};return this.client.call("put",r,p,d)}listSessions(){const e="/account/sessions",i={},t=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",t,o,i)}deleteSessions(){const e="/account/sessions",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("delete",t,o,i)}createAnonymousSession(){const e="/account/sessions/anonymous",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",t,o,i)}createEmailPasswordSession(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={email:e,password:i[0]};const o=t.email,c=t.password;if(typeof o>"u")throw new f('Missing required parameter: "email"');if(typeof c>"u")throw new f('Missing required parameter: "password"');const a="/account/sessions/email",s={};typeof o<"u"&&(s.email=o),typeof c<"u"&&(s.password=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("post",d,r,s)}updateMagicURLSession(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,secret:i[0]};const o=t.userId,c=t.secret;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "secret"');const a="/account/sessions/magic-url",s={};typeof o<"u"&&(s.userId=o),typeof c<"u"&&(s.secret=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}createOAuth2Session(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)&&"provider"in e?t=e||{}:t={provider:e,success:i[0],failure:i[1],scopes:i[2]};const o=t.provider,c=t.success,a=t.failure,s=t.scopes;if(typeof o>"u")throw new f('Missing required parameter: "provider"');const d="/account/sessions/oauth2/{provider}".replace("{provider}",o),r={};typeof c<"u"&&(r.success=c),typeof a<"u"&&(r.failure=a),typeof s<"u"&&(r.scopes=s);const p=new URL(this.client.config.endpoint+d);r.project=this.client.config.project;for(const[u,y]of Object.entries(m.flatten(r)))p.searchParams.append(u,y);if(typeof window<"u"&&(window!=null&&window.location)){window.location.href=p.toString();return}else return p.toString()}updatePhoneSession(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,secret:i[0]};const o=t.userId,c=t.secret;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "secret"');const a="/account/sessions/phone",s={};typeof o<"u"&&(s.userId=o),typeof c<"u"&&(s.secret=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}createSession(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,secret:i[0]};const o=t.userId,c=t.secret;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "secret"');const a="/account/sessions/token",s={};typeof o<"u"&&(s.userId=o),typeof c<"u"&&(s.secret=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("post",d,r,s)}getSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const t=i.sessionId;if(typeof t>"u")throw new f('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",t),c={},a=new URL(this.client.config.endpoint+o),s={};return this.client.call("get",a,s,c)}updateSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const t=i.sessionId;if(typeof t>"u")throw new f('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",t),c={},a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("patch",a,s,c)}deleteSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const t=i.sessionId;if(typeof t>"u")throw new f('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",t),c={},a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("delete",a,s,c)}updateStatus(){const e="/account/status",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",t,o,i)}createPushTarget(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={targetId:e,identifier:i[0],providerId:i[1]};const o=t.targetId,c=t.identifier,a=t.providerId;if(typeof o>"u")throw new f('Missing required parameter: "targetId"');if(typeof c>"u")throw new f('Missing required parameter: "identifier"');const s="/account/targets/push",d={};typeof o<"u"&&(d.targetId=o),typeof c<"u"&&(d.identifier=c),typeof a<"u"&&(d.providerId=a);const r=new URL(this.client.config.endpoint+s),p={"content-type":"application/json"};return this.client.call("post",r,p,d)}updatePushTarget(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={targetId:e,identifier:i[0]};const o=t.targetId,c=t.identifier;if(typeof o>"u")throw new f('Missing required parameter: "targetId"');if(typeof c>"u")throw new f('Missing required parameter: "identifier"');const a="/account/targets/{targetId}/push".replace("{targetId}",o),s={};typeof c<"u"&&(s.identifier=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}deletePushTarget(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={targetId:e};const t=i.targetId;if(typeof t>"u")throw new f('Missing required parameter: "targetId"');const o="/account/targets/{targetId}/push".replace("{targetId}",t),c={},a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("delete",a,s,c)}createEmailToken(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,email:i[0],phrase:i[1]};const o=t.userId,c=t.email,a=t.phrase;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "email"');const s="/account/tokens/email",d={};typeof o<"u"&&(d.userId=o),typeof c<"u"&&(d.email=c),typeof a<"u"&&(d.phrase=a);const r=new URL(this.client.config.endpoint+s),p={"content-type":"application/json"};return this.client.call("post",r,p,d)}createMagicURLToken(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,email:i[0],url:i[1],phrase:i[2]};const o=t.userId,c=t.email,a=t.url,s=t.phrase;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "email"');const d="/account/tokens/magic-url",r={};typeof o<"u"&&(r.userId=o),typeof c<"u"&&(r.email=c),typeof a<"u"&&(r.url=a),typeof s<"u"&&(r.phrase=s);const p=new URL(this.client.config.endpoint+d),u={"content-type":"application/json"};return this.client.call("post",p,u,r)}createOAuth2Token(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)&&"provider"in e?t=e||{}:t={provider:e,success:i[0],failure:i[1],scopes:i[2]};const o=t.provider,c=t.success,a=t.failure,s=t.scopes;if(typeof o>"u")throw new f('Missing required parameter: "provider"');const d="/account/tokens/oauth2/{provider}".replace("{provider}",o),r={};typeof c<"u"&&(r.success=c),typeof a<"u"&&(r.failure=a),typeof s<"u"&&(r.scopes=s);const p=new URL(this.client.config.endpoint+d);r.project=this.client.config.project;for(const[u,y]of Object.entries(m.flatten(r)))p.searchParams.append(u,y);if(typeof window<"u"&&(window!=null&&window.location)){window.location.href=p.toString();return}else return p.toString()}createPhoneToken(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,phone:i[0]};const o=t.userId,c=t.phone;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "phone"');const a="/account/tokens/phone",s={};typeof o<"u"&&(s.userId=o),typeof c<"u"&&(s.phone=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("post",d,r,s)}createVerification(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={url:e};const t=i.url;if(typeof t>"u")throw new f('Missing required parameter: "url"');const o="/account/verification",c={};typeof t<"u"&&(c.url=t);const a=new URL(this.client.config.endpoint+o),s={"content-type":"application/json"};return this.client.call("post",a,s,c)}updateVerification(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,secret:i[0]};const o=t.userId,c=t.secret;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "secret"');const a="/account/verification",s={};typeof o<"u"&&(s.userId=o),typeof c<"u"&&(s.secret=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}createPhoneVerification(){const e="/account/verification/phone",i={},t=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",t,o,i)}updatePhoneVerification(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={userId:e,secret:i[0]};const o=t.userId,c=t.secret;if(typeof o>"u")throw new f('Missing required parameter: "userId"');if(typeof c>"u")throw new f('Missing required parameter: "secret"');const a="/account/verification/phone",s={};typeof o<"u"&&(s.userId=o),typeof c<"u"&&(s.secret=c);const d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("put",d,r,s)}}class _{constructor(e){this.client=e}listDocuments(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={databaseId:e,collectionId:i[0],queries:i[1]};const o=t.databaseId,c=t.collectionId,a=t.queries;if(typeof o>"u")throw new f('Missing required parameter: "databaseId"');if(typeof c>"u")throw new f('Missing required parameter: "collectionId"');const s="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",o).replace("{collectionId}",c),d={};typeof a<"u"&&(d.queries=a);const r=new URL(this.client.config.endpoint+s),p={};return this.client.call("get",r,p,d)}createDocument(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={databaseId:e,collectionId:i[0],documentId:i[1],data:i[2],permissions:i[3]};const o=t.databaseId,c=t.collectionId,a=t.documentId,s=t.data,d=t.permissions;if(typeof o>"u")throw new f('Missing required parameter: "databaseId"');if(typeof c>"u")throw new f('Missing required parameter: "collectionId"');if(typeof a>"u")throw new f('Missing required parameter: "documentId"');if(typeof s>"u")throw new f('Missing required parameter: "data"');const r="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",o).replace("{collectionId}",c),p={};typeof a<"u"&&(p.documentId=a),typeof s<"u"&&(p.data=s),typeof d<"u"&&(p.permissions=d);const u=new URL(this.client.config.endpoint+r),y={"content-type":"application/json"};return this.client.call("post",u,y,p)}getDocument(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={databaseId:e,collectionId:i[0],documentId:i[1],queries:i[2]};const o=t.databaseId,c=t.collectionId,a=t.documentId,s=t.queries;if(typeof o>"u")throw new f('Missing required parameter: "databaseId"');if(typeof c>"u")throw new f('Missing required parameter: "collectionId"');if(typeof a>"u")throw new f('Missing required parameter: "documentId"');const d="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",a),r={};typeof s<"u"&&(r.queries=s);const p=new URL(this.client.config.endpoint+d),u={};return this.client.call("get",p,u,r)}upsertDocument(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={databaseId:e,collectionId:i[0],documentId:i[1],data:i[2],permissions:i[3]};const o=t.databaseId,c=t.collectionId,a=t.documentId,s=t.data,d=t.permissions;if(typeof o>"u")throw new f('Missing required parameter: "databaseId"');if(typeof c>"u")throw new f('Missing required parameter: "collectionId"');if(typeof a>"u")throw new f('Missing required parameter: "documentId"');if(typeof s>"u")throw new f('Missing required parameter: "data"');const r="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",a),p={};typeof s<"u"&&(p.data=s),typeof d<"u"&&(p.permissions=d);const u=new URL(this.client.config.endpoint+r),y={"content-type":"application/json"};return this.client.call("put",u,y,p)}updateDocument(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={databaseId:e,collectionId:i[0],documentId:i[1],data:i[2],permissions:i[3]};const o=t.databaseId,c=t.collectionId,a=t.documentId,s=t.data,d=t.permissions;if(typeof o>"u")throw new f('Missing required parameter: "databaseId"');if(typeof c>"u")throw new f('Missing required parameter: "collectionId"');if(typeof a>"u")throw new f('Missing required parameter: "documentId"');const r="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",a),p={};typeof s<"u"&&(p.data=s),typeof d<"u"&&(p.permissions=d);const u=new URL(this.client.config.endpoint+r),y={"content-type":"application/json"};return this.client.call("patch",u,y,p)}deleteDocument(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={databaseId:e,collectionId:i[0],documentId:i[1]};const o=t.databaseId,c=t.collectionId,a=t.documentId;if(typeof o>"u")throw new f('Missing required parameter: "databaseId"');if(typeof c>"u")throw new f('Missing required parameter: "collectionId"');if(typeof a>"u")throw new f('Missing required parameter: "documentId"');const s="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",a),d={},r=new URL(this.client.config.endpoint+s),p={"content-type":"application/json"};return this.client.call("delete",r,p,d)}decrementDocumentAttribute(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={databaseId:e,collectionId:i[0],documentId:i[1],attribute:i[2],value:i[3],min:i[4]};const o=t.databaseId,c=t.collectionId,a=t.documentId,s=t.attribute,d=t.value,r=t.min;if(typeof o>"u")throw new f('Missing required parameter: "databaseId"');if(typeof c>"u")throw new f('Missing required parameter: "collectionId"');if(typeof a>"u")throw new f('Missing required parameter: "documentId"');if(typeof s>"u")throw new f('Missing required parameter: "attribute"');const p="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}/{attribute}/decrement".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",a).replace("{attribute}",s),u={};typeof d<"u"&&(u.value=d),typeof r<"u"&&(u.min=r);const y=new URL(this.client.config.endpoint+p),h={"content-type":"application/json"};return this.client.call("patch",y,h,u)}incrementDocumentAttribute(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={databaseId:e,collectionId:i[0],documentId:i[1],attribute:i[2],value:i[3],max:i[4]};const o=t.databaseId,c=t.collectionId,a=t.documentId,s=t.attribute,d=t.value,r=t.max;if(typeof o>"u")throw new f('Missing required parameter: "databaseId"');if(typeof c>"u")throw new f('Missing required parameter: "collectionId"');if(typeof a>"u")throw new f('Missing required parameter: "documentId"');if(typeof s>"u")throw new f('Missing required parameter: "attribute"');const p="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}/{attribute}/increment".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",a).replace("{attribute}",s),u={};typeof d<"u"&&(u.value=d),typeof r<"u"&&(u.max=r);const y=new URL(this.client.config.endpoint+p),h={"content-type":"application/json"};return this.client.call("patch",y,h,u)}}class G{constructor(e){this.client=e}listExecutions(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={functionId:e,queries:i[0]};const o=t.functionId,c=t.queries;if(typeof o>"u")throw new f('Missing required parameter: "functionId"');const a="/functions/{functionId}/executions".replace("{functionId}",o),s={};typeof c<"u"&&(s.queries=c);const d=new URL(this.client.config.endpoint+a),r={};return this.client.call("get",d,r,s)}createExecution(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={functionId:e,body:i[0],async:i[1],xpath:i[2],method:i[3],headers:i[4],scheduledAt:i[5]};const o=t.functionId,c=t.body,a=t.async,s=t.xpath,d=t.method,r=t.headers,p=t.scheduledAt;if(typeof o>"u")throw new f('Missing required parameter: "functionId"');const u="/functions/{functionId}/executions".replace("{functionId}",o),y={};typeof c<"u"&&(y.body=c),typeof a<"u"&&(y.async=a),typeof s<"u"&&(y.path=s),typeof d<"u"&&(y.method=d),typeof r<"u"&&(y.headers=r),typeof p<"u"&&(y.scheduledAt=p);const h=new URL(this.client.config.endpoint+u),I={"content-type":"application/json"};return this.client.call("post",h,I,y)}getExecution(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={functionId:e,executionId:i[0]};const o=t.functionId,c=t.executionId;if(typeof o>"u")throw new f('Missing required parameter: "functionId"');if(typeof c>"u")throw new f('Missing required parameter: "executionId"');const a="/functions/{functionId}/executions/{executionId}".replace("{functionId}",o).replace("{executionId}",c),s={},d=new URL(this.client.config.endpoint+a),r={};return this.client.call("get",d,r,s)}}class K{constructor(e){this.client=e}listFiles(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={bucketId:e,queries:i[0],search:i[1]};const o=t.bucketId,c=t.queries,a=t.search;if(typeof o>"u")throw new f('Missing required parameter: "bucketId"');const s="/storage/buckets/{bucketId}/files".replace("{bucketId}",o),d={};typeof c<"u"&&(d.queries=c),typeof a<"u"&&(d.search=a);const r=new URL(this.client.config.endpoint+s),p={};return this.client.call("get",r,p,d)}createFile(e,...i){let t,o;e&&typeof e=="object"&&!Array.isArray(e)?(t=e||{},o=e==null?void 0:e.onProgress):(t={bucketId:e,fileId:i[0],file:i[1],permissions:i[2]},o=i[3]);const c=t.bucketId,a=t.fileId,s=t.file,d=t.permissions;if(typeof c>"u")throw new f('Missing required parameter: "bucketId"');if(typeof a>"u")throw new f('Missing required parameter: "fileId"');if(typeof s>"u")throw new f('Missing required parameter: "file"');const r="/storage/buckets/{bucketId}/files".replace("{bucketId}",c),p={};typeof a<"u"&&(p.fileId=a),typeof s<"u"&&(p.file=s),typeof d<"u"&&(p.permissions=d);const u=new URL(this.client.config.endpoint+r),y={"content-type":"multipart/form-data"};return this.client.chunkedUpload("post",u,y,p,o)}getFile(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={bucketId:e,fileId:i[0]};const o=t.bucketId,c=t.fileId;if(typeof o>"u")throw new f('Missing required parameter: "bucketId"');if(typeof c>"u")throw new f('Missing required parameter: "fileId"');const a="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",c),s={},d=new URL(this.client.config.endpoint+a),r={};return this.client.call("get",d,r,s)}updateFile(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={bucketId:e,fileId:i[0],name:i[1],permissions:i[2]};const o=t.bucketId,c=t.fileId,a=t.name,s=t.permissions;if(typeof o>"u")throw new f('Missing required parameter: "bucketId"');if(typeof c>"u")throw new f('Missing required parameter: "fileId"');const d="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",c),r={};typeof a<"u"&&(r.name=a),typeof s<"u"&&(r.permissions=s);const p=new URL(this.client.config.endpoint+d),u={"content-type":"application/json"};return this.client.call("put",p,u,r)}deleteFile(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={bucketId:e,fileId:i[0]};const o=t.bucketId,c=t.fileId;if(typeof o>"u")throw new f('Missing required parameter: "bucketId"');if(typeof c>"u")throw new f('Missing required parameter: "fileId"');const a="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",c),s={},d=new URL(this.client.config.endpoint+a),r={"content-type":"application/json"};return this.client.call("delete",d,r,s)}getFileDownload(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={bucketId:e,fileId:i[0],token:i[1]};const o=t.bucketId,c=t.fileId,a=t.token;if(typeof o>"u")throw new f('Missing required parameter: "bucketId"');if(typeof c>"u")throw new f('Missing required parameter: "fileId"');const s="/storage/buckets/{bucketId}/files/{fileId}/download".replace("{bucketId}",o).replace("{fileId}",c),d={};typeof a<"u"&&(d.token=a);const r=new URL(this.client.config.endpoint+s);d.project=this.client.config.project;for(const[p,u]of Object.entries(m.flatten(d)))r.searchParams.append(p,u);return r.toString()}getFilePreview(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={bucketId:e,fileId:i[0],width:i[1],height:i[2],gravity:i[3],quality:i[4],borderWidth:i[5],borderColor:i[6],borderRadius:i[7],opacity:i[8],rotation:i[9],background:i[10],output:i[11],token:i[12]};const o=t.bucketId,c=t.fileId,a=t.width,s=t.height,d=t.gravity,r=t.quality,p=t.borderWidth,u=t.borderColor,y=t.borderRadius,h=t.opacity,I=t.rotation,A=t.background,j=t.output,M=t.token;if(typeof o>"u")throw new f('Missing required parameter: "bucketId"');if(typeof c>"u")throw new f('Missing required parameter: "fileId"');const D="/storage/buckets/{bucketId}/files/{fileId}/preview".replace("{bucketId}",o).replace("{fileId}",c),w={};typeof a<"u"&&(w.width=a),typeof s<"u"&&(w.height=s),typeof d<"u"&&(w.gravity=d),typeof r<"u"&&(w.quality=r),typeof p<"u"&&(w.borderWidth=p),typeof u<"u"&&(w.borderColor=u),typeof y<"u"&&(w.borderRadius=y),typeof h<"u"&&(w.opacity=h),typeof I<"u"&&(w.rotation=I),typeof A<"u"&&(w.background=A),typeof j<"u"&&(w.output=j),typeof M<"u"&&(w.token=M);const S=new URL(this.client.config.endpoint+D);w.project=this.client.config.project;for(const[z,B]of Object.entries(m.flatten(w)))S.searchParams.append(z,B);return S.toString()}getFileView(e,...i){let t;e&&typeof e=="object"&&!Array.isArray(e)?t=e||{}:t={bucketId:e,fileId:i[0],token:i[1]};const o=t.bucketId,c=t.fileId,a=t.token;if(typeof o>"u")throw new f('Missing required parameter: "bucketId"');if(typeof c>"u")throw new f('Missing required parameter: "fileId"');const s="/storage/buckets/{bucketId}/files/{fileId}/view".replace("{bucketId}",o).replace("{fileId}",c),d={};typeof a<"u"&&(d.token=a);const r=new URL(this.client.config.endpoint+s);d.project=this.client.config.project;for(const[p,u]of Object.entries(m.flatten(d)))r.searchParams.append(p,u);return r.toString()}}var x,N;class g{static custom(e){return e}static unique(e=7){const i=W(g,x,"m",N).call(g);let t="";for(let o=0;o<e;o++){const c=Math.floor(Math.random()*16).toString(16);t+=c}return i+t}}x=g,N=function(){const e=new Date,i=Math.floor(e.getTime()/1e3),t=e.getMilliseconds();return i.toString(16)+t.toString(16).padStart(5,"0")};var q;(function(n){n.Totp="totp"})(q||(q={}));var v;(function(n){n.Email="email",n.Phone="phone",n.Totp="totp",n.Recoverycode="recoverycode"})(v||(v={}));var R;(function(n){n.Amazon="amazon",n.Apple="apple",n.Auth0="auth0",n.Authentik="authentik",n.Autodesk="autodesk",n.Bitbucket="bitbucket",n.Bitly="bitly",n.Box="box",n.Dailymotion="dailymotion",n.Discord="discord",n.Disqus="disqus",n.Dropbox="dropbox",n.Etsy="etsy",n.Facebook="facebook",n.Figma="figma",n.Github="github",n.Gitlab="gitlab",n.Google="google",n.Linkedin="linkedin",n.Microsoft="microsoft",n.Notion="notion",n.Oidc="oidc",n.Okta="okta",n.Paypal="paypal",n.PaypalSandbox="paypalSandbox",n.Podio="podio",n.Salesforce="salesforce",n.Slack="slack",n.Spotify="spotify",n.Stripe="stripe",n.Tradeshift="tradeshift",n.TradeshiftBox="tradeshiftBox",n.Twitch="twitch",n.Wordpress="wordpress",n.Yahoo="yahoo",n.Yammer="yammer",n.Yandex="yandex",n.Zoho="zoho",n.Zoom="zoom",n.Mock="mock"})(R||(R={}));var L;(function(n){n.AvantBrowser="aa",n.AndroidWebViewBeta="an",n.GoogleChrome="ch",n.GoogleChromeIOS="ci",n.GoogleChromeMobile="cm",n.Chromium="cr",n.MozillaFirefox="ff",n.Safari="sf",n.MobileSafari="mf",n.MicrosoftEdge="ps",n.MicrosoftEdgeIOS="oi",n.OperaMini="om",n.Opera="op",n.OperaNext="on"})(L||(L={}));var U;(function(n){n.AmericanExpress="amex",n.Argencard="argencard",n.Cabal="cabal",n.Cencosud="cencosud",n.DinersClub="diners",n.Discover="discover",n.Elo="elo",n.Hipercard="hipercard",n.JCB="jcb",n.Mastercard="mastercard",n.Naranja="naranja",n.TarjetaShopping="targeta-shopping",n.UnionPay="unionpay",n.Visa="visa",n.MIR="mir",n.Maestro="maestro",n.Rupay="rupay"})(U||(U={}));var P;(function(n){n.Afghanistan="af",n.Angola="ao",n.Albania="al",n.Andorra="ad",n.UnitedArabEmirates="ae",n.Argentina="ar",n.Armenia="am",n.AntiguaAndBarbuda="ag",n.Australia="au",n.Austria="at",n.Azerbaijan="az",n.Burundi="bi",n.Belgium="be",n.Benin="bj",n.BurkinaFaso="bf",n.Bangladesh="bd",n.Bulgaria="bg",n.Bahrain="bh",n.Bahamas="bs",n.BosniaAndHerzegovina="ba",n.Belarus="by",n.Belize="bz",n.Bolivia="bo",n.Brazil="br",n.Barbados="bb",n.BruneiDarussalam="bn",n.Bhutan="bt",n.Botswana="bw",n.CentralAfricanRepublic="cf",n.Canada="ca",n.Switzerland="ch",n.Chile="cl",n.China="cn",n.CoteDIvoire="ci",n.Cameroon="cm",n.DemocraticRepublicOfTheCongo="cd",n.RepublicOfTheCongo="cg",n.Colombia="co",n.Comoros="km",n.CapeVerde="cv",n.CostaRica="cr",n.Cuba="cu",n.Cyprus="cy",n.CzechRepublic="cz",n.Germany="de",n.Djibouti="dj",n.Dominica="dm",n.Denmark="dk",n.DominicanRepublic="do",n.Algeria="dz",n.Ecuador="ec",n.Egypt="eg",n.Eritrea="er",n.Spain="es",n.Estonia="ee",n.Ethiopia="et",n.Finland="fi",n.Fiji="fj",n.France="fr",n.MicronesiaFederatedStatesOf="fm",n.Gabon="ga",n.UnitedKingdom="gb",n.Georgia="ge",n.Ghana="gh",n.Guinea="gn",n.Gambia="gm",n.GuineaBissau="gw",n.EquatorialGuinea="gq",n.Greece="gr",n.Grenada="gd",n.Guatemala="gt",n.Guyana="gy",n.Honduras="hn",n.Croatia="hr",n.Haiti="ht",n.Hungary="hu",n.Indonesia="id",n.India="in",n.Ireland="ie",n.IranIslamicRepublicOf="ir",n.Iraq="iq",n.Iceland="is",n.Israel="il",n.Italy="it",n.Jamaica="jm",n.Jordan="jo",n.Japan="jp",n.Kazakhstan="kz",n.Kenya="ke",n.Kyrgyzstan="kg",n.Cambodia="kh",n.Kiribati="ki",n.SaintKittsAndNevis="kn",n.SouthKorea="kr",n.Kuwait="kw",n.LaoPeopleSDemocraticRepublic="la",n.Lebanon="lb",n.Liberia="lr",n.Libya="ly",n.SaintLucia="lc",n.Liechtenstein="li",n.SriLanka="lk",n.Lesotho="ls",n.Lithuania="lt",n.Luxembourg="lu",n.Latvia="lv",n.Morocco="ma",n.Monaco="mc",n.Moldova="md",n.Madagascar="mg",n.Maldives="mv",n.Mexico="mx",n.MarshallIslands="mh",n.NorthMacedonia="mk",n.Mali="ml",n.Malta="mt",n.Myanmar="mm",n.Montenegro="me",n.Mongolia="mn",n.Mozambique="mz",n.Mauritania="mr",n.Mauritius="mu",n.Malawi="mw",n.Malaysia="my",n.Namibia="na",n.Niger="ne",n.Nigeria="ng",n.Nicaragua="ni",n.Netherlands="nl",n.Norway="no",n.Nepal="np",n.Nauru="nr",n.NewZealand="nz",n.Oman="om",n.Pakistan="pk",n.Panama="pa",n.Peru="pe",n.Philippines="ph",n.Palau="pw",n.PapuaNewGuinea="pg",n.Poland="pl",n.FrenchPolynesia="pf",n.NorthKorea="kp",n.Portugal="pt",n.Paraguay="py",n.Qatar="qa",n.Romania="ro",n.Russia="ru",n.Rwanda="rw",n.SaudiArabia="sa",n.Sudan="sd",n.Senegal="sn",n.Singapore="sg",n.SolomonIslands="sb",n.SierraLeone="sl",n.ElSalvador="sv",n.SanMarino="sm",n.Somalia="so",n.Serbia="rs",n.SouthSudan="ss",n.SaoTomeAndPrincipe="st",n.Suriname="sr",n.Slovakia="sk",n.Slovenia="si",n.Sweden="se",n.Eswatini="sz",n.Seychelles="sc",n.Syria="sy",n.Chad="td",n.Togo="tg",n.Thailand="th",n.Tajikistan="tj",n.Turkmenistan="tm",n.TimorLeste="tl",n.Tonga="to",n.TrinidadAndTobago="tt",n.Tunisia="tn",n.Turkey="tr",n.Tuvalu="tv",n.Tanzania="tz",n.Uganda="ug",n.Ukraine="ua",n.Uruguay="uy",n.UnitedStates="us",n.Uzbekistan="uz",n.VaticanCity="va",n.SaintVincentAndTheGrenadines="vc",n.Venezuela="ve",n.Vietnam="vn",n.Vanuatu="vu",n.Samoa="ws",n.Yemen="ye",n.SouthAfrica="za",n.Zambia="zm",n.Zimbabwe="zw"})(P||(P={}));var H;(function(n){n.GET="GET",n.POST="POST",n.PUT="PUT",n.PATCH="PATCH",n.DELETE="DELETE",n.OPTIONS="OPTIONS",n.HEAD="HEAD"})(H||(H={}));var T;(function(n){n.Center="center",n.Topleft="top-left",n.Top="top",n.Topright="top-right",n.Left="left",n.Right="right",n.Bottomleft="bottom-left",n.Bottom="bottom",n.Bottomright="bottom-right"})(T||(T={}));var E;(function(n){n.Jpg="jpg",n.Jpeg="jpeg",n.Png="png",n.Webp="webp",n.Heic="heic",n.Avif="avif",n.Gif="gif"})(E||(E={}));export{C as A,b as C,_ as D,H as E,G as F,g as I,R as O,l as Q,K as S};
