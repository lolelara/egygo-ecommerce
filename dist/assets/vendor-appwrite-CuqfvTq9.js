function k(t,e,i,n){function o(c){return c instanceof i?c:new i(function(s){s(c)})}return new(i||(i=Promise))(function(c,s){function a(f){try{r(n.next(f))}catch(u){s(u)}}function d(f){try{r(n.throw(f))}catch(u){s(u)}}function r(f){f.done?c(f.value):o(f.value).then(a,d)}r((n=n.apply(t,[])).next())})}function W(t,e,i,n){if(typeof e=="function"?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return i==="m"?n:i==="a"?n.call(t):n?n.value:e.get(t)}class l{constructor(e,i,n){this.method=e,this.attribute=i,n!==void 0&&(Array.isArray(n)?this.values=n:this.values=[n])}toString(){return JSON.stringify({method:this.method,attribute:this.attribute,values:this.values})}}l.equal=(t,e)=>new l("equal",t,e).toString();l.notEqual=(t,e)=>new l("notEqual",t,e).toString();l.lessThan=(t,e)=>new l("lessThan",t,e).toString();l.lessThanEqual=(t,e)=>new l("lessThanEqual",t,e).toString();l.greaterThan=(t,e)=>new l("greaterThan",t,e).toString();l.greaterThanEqual=(t,e)=>new l("greaterThanEqual",t,e).toString();l.isNull=t=>new l("isNull",t).toString();l.isNotNull=t=>new l("isNotNull",t).toString();l.between=(t,e,i)=>new l("between",t,[e,i]).toString();l.startsWith=(t,e)=>new l("startsWith",t,e).toString();l.endsWith=(t,e)=>new l("endsWith",t,e).toString();l.select=t=>new l("select",void 0,t).toString();l.search=(t,e)=>new l("search",t,e).toString();l.orderDesc=t=>new l("orderDesc",t).toString();l.orderAsc=t=>new l("orderAsc",t).toString();l.orderRandom=()=>new l("orderRandom").toString();l.cursorAfter=t=>new l("cursorAfter",void 0,t).toString();l.cursorBefore=t=>new l("cursorBefore",void 0,t).toString();l.limit=t=>new l("limit",void 0,t).toString();l.offset=t=>new l("offset",void 0,t).toString();l.contains=(t,e)=>new l("contains",t,e).toString();l.notContains=(t,e)=>new l("notContains",t,e).toString();l.notSearch=(t,e)=>new l("notSearch",t,e).toString();l.notBetween=(t,e,i)=>new l("notBetween",t,[e,i]).toString();l.notStartsWith=(t,e)=>new l("notStartsWith",t,e).toString();l.notEndsWith=(t,e)=>new l("notEndsWith",t,e).toString();l.createdBefore=t=>new l("createdBefore",void 0,t).toString();l.createdAfter=t=>new l("createdAfter",void 0,t).toString();l.createdBetween=(t,e)=>new l("createdBetween",void 0,[t,e]).toString();l.updatedBefore=t=>new l("updatedBefore",void 0,t).toString();l.updatedAfter=t=>new l("updatedAfter",void 0,t).toString();l.updatedBetween=(t,e)=>new l("updatedBetween",void 0,[t,e]).toString();l.or=t=>new l("or",void 0,t.map(e=>JSON.parse(e))).toString();l.and=t=>new l("and",void 0,t.map(e=>JSON.parse(e))).toString();l.distanceEqual=(t,e,i,n=!0)=>new l("distanceEqual",t,[[e,i,n]]).toString();l.distanceNotEqual=(t,e,i,n=!0)=>new l("distanceNotEqual",t,[[e,i,n]]).toString();l.distanceGreaterThan=(t,e,i,n=!0)=>new l("distanceGreaterThan",t,[[e,i,n]]).toString();l.distanceLessThan=(t,e,i,n=!0)=>new l("distanceLessThan",t,[[e,i,n]]).toString();l.intersects=(t,e)=>new l("intersects",t,[e]).toString();l.notIntersects=(t,e)=>new l("notIntersects",t,[e]).toString();l.crosses=(t,e)=>new l("crosses",t,[e]).toString();l.notCrosses=(t,e)=>new l("notCrosses",t,[e]).toString();l.overlaps=(t,e)=>new l("overlaps",t,[e]).toString();l.notOverlaps=(t,e)=>new l("notOverlaps",t,[e]).toString();l.touches=(t,e)=>new l("touches",t,[e]).toString();l.notTouches=(t,e)=>new l("notTouches",t,[e]).toString();class p extends Error{constructor(e,i=0,n="",o=""){super(e),this.name="AppwriteException",this.message=e,this.code=i,this.type=n,this.response=o}}class b{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:"",devkey:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"20.1.0","X-Appwrite-Response-Format":"1.8.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=window==null?void 0:window.setTimeout(()=>{this.realtime.createSocket()},50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=window==null?void 0:window.setInterval(()=>{var e;(e=this.realtime.socket)===null||e===void 0||e.send(JSON.stringify({type:"ping"}))},2e4)},createSocket:()=>{var e,i,n;if(this.realtime.channels.size<1){this.realtime.reconnect=!1,(e=this.realtime.socket)===null||e===void 0||e.close();return}const o=new URLSearchParams;o.set("project",this.config.project),this.realtime.channels.forEach(s=>{o.append("channels[]",s)});const c=this.config.endpointRealtime+"/realtime?"+o.toString();(c!==this.realtime.url||!this.realtime.socket||((i=this.realtime.socket)===null||i===void 0?void 0:i.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&((n=this.realtime.socket)===null||n===void 0?void 0:n.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=c,this.realtime.socket=new WebSocket(c),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",s=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()}),this.realtime.socket.addEventListener("close",s=>{var a,d,r;if(!this.realtime.reconnect||((d=(a=this.realtime)===null||a===void 0?void 0:a.lastMessage)===null||d===void 0?void 0:d.type)==="error"&&((r=this.realtime)===null||r===void 0?void 0:r.lastMessage.data).code===1008){this.realtime.reconnect=!0;return}const f=this.realtime.getTimeout();console.error(`Realtime got disconnected. Reconnect will be attempted in ${f/1e3} seconds.`,s.reason),setTimeout(()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()},f)}))},onMessage:e=>{var i,n;try{const o=JSON.parse(e.data);switch(this.realtime.lastMessage=o,o.type){case"connected":const c=JSON.parse((i=window.localStorage.getItem("cookieFallback"))!==null&&i!==void 0?i:"{}"),s=c==null?void 0:c[`a_session_${this.config.project}`],a=o.data;s&&!a.user&&((n=this.realtime.socket)===null||n===void 0||n.send(JSON.stringify({type:"authentication",data:{session:s}})));break;case"event":let d=o.data;if(d!=null&&d.channels){if(!d.channels.some(f=>this.realtime.channels.has(f)))return;this.realtime.subscriptions.forEach(f=>{d.channels.some(u=>f.channels.includes(u))&&setTimeout(()=>f.callback(d))})}break;case"pong":break;case"error":throw o.data;default:break}}catch(o){console.error(o)}},cleanUp:e=>{this.realtime.channels.forEach(i=>{e.includes(i)&&(Array.from(this.realtime.subscriptions).some(([o,c])=>c.channels.includes(i))||this.realtime.channels.delete(i))})}}}setEndpoint(e){if(!e.startsWith("http://")&&!e.startsWith("https://"))throw new p("Invalid endpoint URL: "+e);return this.config.endpoint=e,this.config.endpointRealtime=e.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(e){if(!e.startsWith("ws://")&&!e.startsWith("wss://"))throw new p("Invalid realtime endpoint URL: "+e);return this.config.endpointRealtime=e,this}setProject(e){return this.headers["X-Appwrite-Project"]=e,this.config.project=e,this}setJWT(e){return this.headers["X-Appwrite-JWT"]=e,this.config.jwt=e,this}setLocale(e){return this.headers["X-Appwrite-Locale"]=e,this.config.locale=e,this}setSession(e){return this.headers["X-Appwrite-Session"]=e,this.config.session=e,this}setDevKey(e){return this.headers["X-Appwrite-Dev-Key"]=e,this.config.devkey=e,this}subscribe(e,i){let n=typeof e=="string"?[e]:e;n.forEach(c=>this.realtime.channels.add(c));const o=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(o,{channels:n,callback:i}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(o),this.realtime.cleanUp(n),this.realtime.connect()}}prepareRequest(e,i,n={},o={}){if(e=e.toUpperCase(),n=Object.assign({},this.headers,n),typeof window<"u"&&window.localStorage){const s=window.localStorage.getItem("cookieFallback");s&&(n["X-Fallback-Cookies"]=s)}let c={method:e,headers:n};if(n["X-Appwrite-Dev-Key"]===void 0&&(c.credentials="include"),e==="GET")for(const[s,a]of Object.entries(b.flatten(o)))i.searchParams.append(s,a);else switch(n["content-type"]){case"application/json":c.body=JSON.stringify(o);break;case"multipart/form-data":const s=new FormData;for(const[a,d]of Object.entries(o))if(d instanceof File)s.append(a,d,d.name);else if(Array.isArray(d))for(const r of d)s.append(`${a}[]`,r);else s.append(a,d);c.body=s,delete n["content-type"];break}return{uri:i.toString(),options:c}}chunkedUpload(e,i,n={},o={},c){var s;return k(this,void 0,void 0,function*(){const[a,d]=(s=Object.entries(o).find(([u,y])=>y instanceof File))!==null&&s!==void 0?s:[];if(!d||!a)throw new Error("File not found in payload");if(d.size<=b.CHUNK_SIZE)return yield this.call(e,i,n,o);let r=0,f=null;for(;r<d.size;){let u=r+b.CHUNK_SIZE;u>=d.size&&(u=d.size),n["content-range"]=`bytes ${r}-${u-1}/${d.size}`;const y=d.slice(r,u);let w=Object.assign({},o);w[a]=new File([y],d.name),f=yield this.call(e,i,n,w),c&&typeof c=="function"&&c({$id:f.$id,progress:Math.round(u/d.size*100),sizeUploaded:u,chunksTotal:Math.ceil(d.size/b.CHUNK_SIZE),chunksUploaded:Math.ceil(u/b.CHUNK_SIZE)}),f&&f.$id&&(n["x-appwrite-id"]=f.$id),r=u}return f})}ping(){return k(this,void 0,void 0,function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))})}call(e,i,n={},o={},c="json"){var s,a;return k(this,void 0,void 0,function*(){const{uri:d,options:r}=this.prepareRequest(e,i,n,o);let f=null;const u=yield fetch(d,r);if(u.type==="opaque")throw new p(`Invalid Origin. Register your new client (${window.location.host}) as a new Web platform on your project console dashboard`,403,"forbidden","");const y=u.headers.get("x-appwrite-warning");if(y&&y.split(";").forEach(I=>console.warn("Warning: "+I)),!((s=u.headers.get("content-type"))===null||s===void 0)&&s.includes("application/json")?f=yield u.json():c==="arrayBuffer"?f=yield u.arrayBuffer():f={message:yield u.text()},400<=u.status){let I="";throw!((a=u.headers.get("content-type"))===null||a===void 0)&&a.includes("application/json")||c==="arrayBuffer"?I=JSON.stringify(f):I=f==null?void 0:f.message,new p(f==null?void 0:f.message,u.status,f==null?void 0:f.type,I)}const w=u.headers.get("X-Fallback-Cookies");return typeof window<"u"&&window.localStorage&&w&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",w)),f})}static flatten(e,i=""){let n={};for(const[o,c]of Object.entries(e)){let s=i?i+"["+o+"]":o;Array.isArray(c)?n=Object.assign(Object.assign({},n),b.flatten(c,s)):n[s]=c}return n}}b.CHUNK_SIZE=1024*1024*5;class m{constructor(e){this.client=e}static flatten(e,i=""){let n={};for(const[o,c]of Object.entries(e)){let s=i?i+"["+o+"]":o;Array.isArray(c)?n=Object.assign(Object.assign({},n),m.flatten(c,s)):n[s]=c}return n}}m.CHUNK_SIZE=5*1024*1024;class C{constructor(e){this.client=e}get(){const e="/account",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}create(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,email:i[0],password:i[1],name:i[2]};const o=n.userId,c=n.email,s=n.password,a=n.name;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "email"');if(typeof s>"u")throw new p('Missing required parameter: "password"');const d="/account",r={};typeof o<"u"&&(r.userId=o),typeof c<"u"&&(r.email=c),typeof s<"u"&&(r.password=s),typeof a<"u"&&(r.name=a);const f=new URL(this.client.config.endpoint+d),u={"content-type":"application/json"};return this.client.call("post",f,u,r)}updateEmail(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={email:e,password:i[0]};const o=n.email,c=n.password;if(typeof o>"u")throw new p('Missing required parameter: "email"');if(typeof c>"u")throw new p('Missing required parameter: "password"');const s="/account/email",a={};typeof o<"u"&&(a.email=o),typeof c<"u"&&(a.password=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("patch",d,r,a)}listIdentities(e){let i;!e||e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={queries:e};const n=i.queries,o="/account/identities",c={};typeof n<"u"&&(c.queries=n);const s=new URL(this.client.config.endpoint+o),a={};return this.client.call("get",s,a,c)}deleteIdentity(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={identityId:e};const n=i.identityId;if(typeof n>"u")throw new p('Missing required parameter: "identityId"');const o="/account/identities/{identityId}".replace("{identityId}",n),c={},s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("delete",s,a,c)}createJWT(){const e="/account/jwts",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}listLogs(e){let i;!e||e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={queries:e};const n=i.queries,o="/account/logs",c={};typeof n<"u"&&(c.queries=n);const s=new URL(this.client.config.endpoint+o),a={};return this.client.call("get",s,a,c)}updateMFA(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={mfa:e};const n=i.mfa;if(typeof n>"u")throw new p('Missing required parameter: "mfa"');const o="/account/mfa",c={};typeof n<"u"&&(c.mfa=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("patch",s,a,c)}createMfaAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const n=i.type;if(typeof n>"u")throw new p('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",n),c={},s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,c)}createMFAAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const n=i.type;if(typeof n>"u")throw new p('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",n),c={},s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,c)}updateMfaAuthenticator(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?n=e||{}:n={type:e,otp:i[0]};const o=n.type,c=n.otp;if(typeof o>"u")throw new p('Missing required parameter: "type"');if(typeof c>"u")throw new p('Missing required parameter: "otp"');const s="/account/mfa/authenticators/{type}".replace("{type}",o),a={};typeof c<"u"&&(a.otp=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}updateMFAAuthenticator(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?n=e||{}:n={type:e,otp:i[0]};const o=n.type,c=n.otp;if(typeof o>"u")throw new p('Missing required parameter: "type"');if(typeof c>"u")throw new p('Missing required parameter: "otp"');const s="/account/mfa/authenticators/{type}".replace("{type}",o),a={};typeof c<"u"&&(a.otp=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}deleteMfaAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const n=i.type;if(typeof n>"u")throw new p('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",n),c={},s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("delete",s,a,c)}deleteMFAAuthenticator(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"type"in e?i=e||{}:i={type:e};const n=i.type;if(typeof n>"u")throw new p('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",n),c={},s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("delete",s,a,c)}createMfaChallenge(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"factor"in e?i=e||{}:i={factor:e};const n=i.factor;if(typeof n>"u")throw new p('Missing required parameter: "factor"');const o="/account/mfa/challenge",c={};typeof n<"u"&&(c.factor=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,c)}createMFAChallenge(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"factor"in e?i=e||{}:i={factor:e};const n=i.factor;if(typeof n>"u")throw new p('Missing required parameter: "factor"');const o="/account/mfa/challenge",c={};typeof n<"u"&&(c.factor=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,c)}updateMfaChallenge(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={challengeId:e,otp:i[0]};const o=n.challengeId,c=n.otp;if(typeof o>"u")throw new p('Missing required parameter: "challengeId"');if(typeof c>"u")throw new p('Missing required parameter: "otp"');const s="/account/mfa/challenge",a={};typeof o<"u"&&(a.challengeId=o),typeof c<"u"&&(a.otp=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}updateMFAChallenge(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={challengeId:e,otp:i[0]};const o=n.challengeId,c=n.otp;if(typeof o>"u")throw new p('Missing required parameter: "challengeId"');if(typeof c>"u")throw new p('Missing required parameter: "otp"');const s="/account/mfa/challenge",a={};typeof o<"u"&&(a.challengeId=o),typeof c<"u"&&(a.otp=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}listMfaFactors(){const e="/account/mfa/factors",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}listMFAFactors(){const e="/account/mfa/factors",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}getMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}getMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}createMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}createMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}updateMfaRecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",n,o,i)}updateMFARecoveryCodes(){const e="/account/mfa/recovery-codes",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",n,o,i)}updateName(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={name:e};const n=i.name;if(typeof n>"u")throw new p('Missing required parameter: "name"');const o="/account/name",c={};typeof n<"u"&&(c.name=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("patch",s,a,c)}updatePassword(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={password:e,oldPassword:i[0]};const o=n.password,c=n.oldPassword;if(typeof o>"u")throw new p('Missing required parameter: "password"');const s="/account/password",a={};typeof o<"u"&&(a.password=o),typeof c<"u"&&(a.oldPassword=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("patch",d,r,a)}updatePhone(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={phone:e,password:i[0]};const o=n.phone,c=n.password;if(typeof o>"u")throw new p('Missing required parameter: "phone"');if(typeof c>"u")throw new p('Missing required parameter: "password"');const s="/account/phone",a={};typeof o<"u"&&(a.phone=o),typeof c<"u"&&(a.password=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("patch",d,r,a)}getPrefs(){const e="/account/prefs",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}updatePrefs(e){let i;e&&typeof e=="object"&&!Array.isArray(e)&&"prefs"in e?i=e||{}:i={prefs:e};const n=i.prefs;if(typeof n>"u")throw new p('Missing required parameter: "prefs"');const o="/account/prefs",c={};typeof n<"u"&&(c.prefs=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("patch",s,a,c)}createRecovery(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={email:e,url:i[0]};const o=n.email,c=n.url;if(typeof o>"u")throw new p('Missing required parameter: "email"');if(typeof c>"u")throw new p('Missing required parameter: "url"');const s="/account/recovery",a={};typeof o<"u"&&(a.email=o),typeof c<"u"&&(a.url=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("post",d,r,a)}updateRecovery(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0],password:i[1]};const o=n.userId,c=n.secret,s=n.password;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "secret"');if(typeof s>"u")throw new p('Missing required parameter: "password"');const a="/account/recovery",d={};typeof o<"u"&&(d.userId=o),typeof c<"u"&&(d.secret=c),typeof s<"u"&&(d.password=s);const r=new URL(this.client.config.endpoint+a),f={"content-type":"application/json"};return this.client.call("put",r,f,d)}listSessions(){const e="/account/sessions",i={},n=new URL(this.client.config.endpoint+e),o={};return this.client.call("get",n,o,i)}deleteSessions(){const e="/account/sessions",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("delete",n,o,i)}createAnonymousSession(){const e="/account/sessions/anonymous",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}createEmailPasswordSession(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={email:e,password:i[0]};const o=n.email,c=n.password;if(typeof o>"u")throw new p('Missing required parameter: "email"');if(typeof c>"u")throw new p('Missing required parameter: "password"');const s="/account/sessions/email",a={};typeof o<"u"&&(a.email=o),typeof c<"u"&&(a.password=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("post",d,r,a)}updateMagicURLSession(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,c=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "secret"');const s="/account/sessions/magic-url",a={};typeof o<"u"&&(a.userId=o),typeof c<"u"&&(a.secret=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}createOAuth2Session(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)&&"provider"in e?n=e||{}:n={provider:e,success:i[0],failure:i[1],scopes:i[2]};const o=n.provider,c=n.success,s=n.failure,a=n.scopes;if(typeof o>"u")throw new p('Missing required parameter: "provider"');const d="/account/sessions/oauth2/{provider}".replace("{provider}",o),r={};typeof c<"u"&&(r.success=c),typeof s<"u"&&(r.failure=s),typeof a<"u"&&(r.scopes=a);const f=new URL(this.client.config.endpoint+d);r.project=this.client.config.project;for(const[u,y]of Object.entries(m.flatten(r)))f.searchParams.append(u,y);if(typeof window<"u"&&(window!=null&&window.location)){window.location.href=f.toString();return}else return f.toString()}updatePhoneSession(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,c=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "secret"');const s="/account/sessions/phone",a={};typeof o<"u"&&(a.userId=o),typeof c<"u"&&(a.secret=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}createSession(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,c=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "secret"');const s="/account/sessions/token",a={};typeof o<"u"&&(a.userId=o),typeof c<"u"&&(a.secret=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("post",d,r,a)}getSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const n=i.sessionId;if(typeof n>"u")throw new p('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",n),c={},s=new URL(this.client.config.endpoint+o),a={};return this.client.call("get",s,a,c)}updateSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const n=i.sessionId;if(typeof n>"u")throw new p('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",n),c={},s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("patch",s,a,c)}deleteSession(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={sessionId:e};const n=i.sessionId;if(typeof n>"u")throw new p('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",n),c={},s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("delete",s,a,c)}updateStatus(){const e="/account/status",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("patch",n,o,i)}createPushTarget(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={targetId:e,identifier:i[0],providerId:i[1]};const o=n.targetId,c=n.identifier,s=n.providerId;if(typeof o>"u")throw new p('Missing required parameter: "targetId"');if(typeof c>"u")throw new p('Missing required parameter: "identifier"');const a="/account/targets/push",d={};typeof o<"u"&&(d.targetId=o),typeof c<"u"&&(d.identifier=c),typeof s<"u"&&(d.providerId=s);const r=new URL(this.client.config.endpoint+a),f={"content-type":"application/json"};return this.client.call("post",r,f,d)}updatePushTarget(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={targetId:e,identifier:i[0]};const o=n.targetId,c=n.identifier;if(typeof o>"u")throw new p('Missing required parameter: "targetId"');if(typeof c>"u")throw new p('Missing required parameter: "identifier"');const s="/account/targets/{targetId}/push".replace("{targetId}",o),a={};typeof c<"u"&&(a.identifier=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}deletePushTarget(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={targetId:e};const n=i.targetId;if(typeof n>"u")throw new p('Missing required parameter: "targetId"');const o="/account/targets/{targetId}/push".replace("{targetId}",n),c={},s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("delete",s,a,c)}createEmailToken(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,email:i[0],phrase:i[1]};const o=n.userId,c=n.email,s=n.phrase;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "email"');const a="/account/tokens/email",d={};typeof o<"u"&&(d.userId=o),typeof c<"u"&&(d.email=c),typeof s<"u"&&(d.phrase=s);const r=new URL(this.client.config.endpoint+a),f={"content-type":"application/json"};return this.client.call("post",r,f,d)}createMagicURLToken(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,email:i[0],url:i[1],phrase:i[2]};const o=n.userId,c=n.email,s=n.url,a=n.phrase;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "email"');const d="/account/tokens/magic-url",r={};typeof o<"u"&&(r.userId=o),typeof c<"u"&&(r.email=c),typeof s<"u"&&(r.url=s),typeof a<"u"&&(r.phrase=a);const f=new URL(this.client.config.endpoint+d),u={"content-type":"application/json"};return this.client.call("post",f,u,r)}createOAuth2Token(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)&&"provider"in e?n=e||{}:n={provider:e,success:i[0],failure:i[1],scopes:i[2]};const o=n.provider,c=n.success,s=n.failure,a=n.scopes;if(typeof o>"u")throw new p('Missing required parameter: "provider"');const d="/account/tokens/oauth2/{provider}".replace("{provider}",o),r={};typeof c<"u"&&(r.success=c),typeof s<"u"&&(r.failure=s),typeof a<"u"&&(r.scopes=a);const f=new URL(this.client.config.endpoint+d);r.project=this.client.config.project;for(const[u,y]of Object.entries(m.flatten(r)))f.searchParams.append(u,y);if(typeof window<"u"&&(window!=null&&window.location)){window.location.href=f.toString();return}else return f.toString()}createPhoneToken(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,phone:i[0]};const o=n.userId,c=n.phone;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "phone"');const s="/account/tokens/phone",a={};typeof o<"u"&&(a.userId=o),typeof c<"u"&&(a.phone=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("post",d,r,a)}createVerification(e){let i;e&&typeof e=="object"&&!Array.isArray(e)?i=e||{}:i={url:e};const n=i.url;if(typeof n>"u")throw new p('Missing required parameter: "url"');const o="/account/verification",c={};typeof n<"u"&&(c.url=n);const s=new URL(this.client.config.endpoint+o),a={"content-type":"application/json"};return this.client.call("post",s,a,c)}updateVerification(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,c=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "secret"');const s="/account/verification",a={};typeof o<"u"&&(a.userId=o),typeof c<"u"&&(a.secret=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}createPhoneVerification(){const e="/account/verification/phone",i={},n=new URL(this.client.config.endpoint+e),o={"content-type":"application/json"};return this.client.call("post",n,o,i)}updatePhoneVerification(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={userId:e,secret:i[0]};const o=n.userId,c=n.secret;if(typeof o>"u")throw new p('Missing required parameter: "userId"');if(typeof c>"u")throw new p('Missing required parameter: "secret"');const s="/account/verification/phone",a={};typeof o<"u"&&(a.userId=o),typeof c<"u"&&(a.secret=c);const d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("put",d,r,a)}}class _{constructor(e){this.client=e}listDocuments(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={databaseId:e,collectionId:i[0],queries:i[1]};const o=n.databaseId,c=n.collectionId,s=n.queries;if(typeof o>"u")throw new p('Missing required parameter: "databaseId"');if(typeof c>"u")throw new p('Missing required parameter: "collectionId"');const a="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",o).replace("{collectionId}",c),d={};typeof s<"u"&&(d.queries=s);const r=new URL(this.client.config.endpoint+a),f={};return this.client.call("get",r,f,d)}createDocument(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={databaseId:e,collectionId:i[0],documentId:i[1],data:i[2],permissions:i[3]};const o=n.databaseId,c=n.collectionId,s=n.documentId,a=n.data,d=n.permissions;if(typeof o>"u")throw new p('Missing required parameter: "databaseId"');if(typeof c>"u")throw new p('Missing required parameter: "collectionId"');if(typeof s>"u")throw new p('Missing required parameter: "documentId"');if(typeof a>"u")throw new p('Missing required parameter: "data"');const r="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",o).replace("{collectionId}",c),f={};typeof s<"u"&&(f.documentId=s),typeof a<"u"&&(f.data=a),typeof d<"u"&&(f.permissions=d);const u=new URL(this.client.config.endpoint+r),y={"content-type":"application/json"};return this.client.call("post",u,y,f)}getDocument(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={databaseId:e,collectionId:i[0],documentId:i[1],queries:i[2]};const o=n.databaseId,c=n.collectionId,s=n.documentId,a=n.queries;if(typeof o>"u")throw new p('Missing required parameter: "databaseId"');if(typeof c>"u")throw new p('Missing required parameter: "collectionId"');if(typeof s>"u")throw new p('Missing required parameter: "documentId"');const d="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",s),r={};typeof a<"u"&&(r.queries=a);const f=new URL(this.client.config.endpoint+d),u={};return this.client.call("get",f,u,r)}upsertDocument(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={databaseId:e,collectionId:i[0],documentId:i[1],data:i[2],permissions:i[3]};const o=n.databaseId,c=n.collectionId,s=n.documentId,a=n.data,d=n.permissions;if(typeof o>"u")throw new p('Missing required parameter: "databaseId"');if(typeof c>"u")throw new p('Missing required parameter: "collectionId"');if(typeof s>"u")throw new p('Missing required parameter: "documentId"');if(typeof a>"u")throw new p('Missing required parameter: "data"');const r="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",s),f={};typeof a<"u"&&(f.data=a),typeof d<"u"&&(f.permissions=d);const u=new URL(this.client.config.endpoint+r),y={"content-type":"application/json"};return this.client.call("put",u,y,f)}updateDocument(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={databaseId:e,collectionId:i[0],documentId:i[1],data:i[2],permissions:i[3]};const o=n.databaseId,c=n.collectionId,s=n.documentId,a=n.data,d=n.permissions;if(typeof o>"u")throw new p('Missing required parameter: "databaseId"');if(typeof c>"u")throw new p('Missing required parameter: "collectionId"');if(typeof s>"u")throw new p('Missing required parameter: "documentId"');const r="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",s),f={};typeof a<"u"&&(f.data=a),typeof d<"u"&&(f.permissions=d);const u=new URL(this.client.config.endpoint+r),y={"content-type":"application/json"};return this.client.call("patch",u,y,f)}deleteDocument(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={databaseId:e,collectionId:i[0],documentId:i[1]};const o=n.databaseId,c=n.collectionId,s=n.documentId;if(typeof o>"u")throw new p('Missing required parameter: "databaseId"');if(typeof c>"u")throw new p('Missing required parameter: "collectionId"');if(typeof s>"u")throw new p('Missing required parameter: "documentId"');const a="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",s),d={},r=new URL(this.client.config.endpoint+a),f={"content-type":"application/json"};return this.client.call("delete",r,f,d)}decrementDocumentAttribute(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={databaseId:e,collectionId:i[0],documentId:i[1],attribute:i[2],value:i[3],min:i[4]};const o=n.databaseId,c=n.collectionId,s=n.documentId,a=n.attribute,d=n.value,r=n.min;if(typeof o>"u")throw new p('Missing required parameter: "databaseId"');if(typeof c>"u")throw new p('Missing required parameter: "collectionId"');if(typeof s>"u")throw new p('Missing required parameter: "documentId"');if(typeof a>"u")throw new p('Missing required parameter: "attribute"');const f="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}/{attribute}/decrement".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",s).replace("{attribute}",a),u={};typeof d<"u"&&(u.value=d),typeof r<"u"&&(u.min=r);const y=new URL(this.client.config.endpoint+f),w={"content-type":"application/json"};return this.client.call("patch",y,w,u)}incrementDocumentAttribute(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={databaseId:e,collectionId:i[0],documentId:i[1],attribute:i[2],value:i[3],max:i[4]};const o=n.databaseId,c=n.collectionId,s=n.documentId,a=n.attribute,d=n.value,r=n.max;if(typeof o>"u")throw new p('Missing required parameter: "databaseId"');if(typeof c>"u")throw new p('Missing required parameter: "collectionId"');if(typeof s>"u")throw new p('Missing required parameter: "documentId"');if(typeof a>"u")throw new p('Missing required parameter: "attribute"');const f="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}/{attribute}/increment".replace("{databaseId}",o).replace("{collectionId}",c).replace("{documentId}",s).replace("{attribute}",a),u={};typeof d<"u"&&(u.value=d),typeof r<"u"&&(u.max=r);const y=new URL(this.client.config.endpoint+f),w={"content-type":"application/json"};return this.client.call("patch",y,w,u)}}class G{constructor(e){this.client=e}listFiles(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={bucketId:e,queries:i[0],search:i[1]};const o=n.bucketId,c=n.queries,s=n.search;if(typeof o>"u")throw new p('Missing required parameter: "bucketId"');const a="/storage/buckets/{bucketId}/files".replace("{bucketId}",o),d={};typeof c<"u"&&(d.queries=c),typeof s<"u"&&(d.search=s);const r=new URL(this.client.config.endpoint+a),f={};return this.client.call("get",r,f,d)}createFile(e,...i){let n,o;e&&typeof e=="object"&&!Array.isArray(e)?(n=e||{},o=e==null?void 0:e.onProgress):(n={bucketId:e,fileId:i[0],file:i[1],permissions:i[2]},o=i[3]);const c=n.bucketId,s=n.fileId,a=n.file,d=n.permissions;if(typeof c>"u")throw new p('Missing required parameter: "bucketId"');if(typeof s>"u")throw new p('Missing required parameter: "fileId"');if(typeof a>"u")throw new p('Missing required parameter: "file"');const r="/storage/buckets/{bucketId}/files".replace("{bucketId}",c),f={};typeof s<"u"&&(f.fileId=s),typeof a<"u"&&(f.file=a),typeof d<"u"&&(f.permissions=d);const u=new URL(this.client.config.endpoint+r),y={"content-type":"multipart/form-data"};return this.client.chunkedUpload("post",u,y,f,o)}getFile(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={bucketId:e,fileId:i[0]};const o=n.bucketId,c=n.fileId;if(typeof o>"u")throw new p('Missing required parameter: "bucketId"');if(typeof c>"u")throw new p('Missing required parameter: "fileId"');const s="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",c),a={},d=new URL(this.client.config.endpoint+s),r={};return this.client.call("get",d,r,a)}updateFile(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={bucketId:e,fileId:i[0],name:i[1],permissions:i[2]};const o=n.bucketId,c=n.fileId,s=n.name,a=n.permissions;if(typeof o>"u")throw new p('Missing required parameter: "bucketId"');if(typeof c>"u")throw new p('Missing required parameter: "fileId"');const d="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",c),r={};typeof s<"u"&&(r.name=s),typeof a<"u"&&(r.permissions=a);const f=new URL(this.client.config.endpoint+d),u={"content-type":"application/json"};return this.client.call("put",f,u,r)}deleteFile(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={bucketId:e,fileId:i[0]};const o=n.bucketId,c=n.fileId;if(typeof o>"u")throw new p('Missing required parameter: "bucketId"');if(typeof c>"u")throw new p('Missing required parameter: "fileId"');const s="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",c),a={},d=new URL(this.client.config.endpoint+s),r={"content-type":"application/json"};return this.client.call("delete",d,r,a)}getFileDownload(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={bucketId:e,fileId:i[0],token:i[1]};const o=n.bucketId,c=n.fileId,s=n.token;if(typeof o>"u")throw new p('Missing required parameter: "bucketId"');if(typeof c>"u")throw new p('Missing required parameter: "fileId"');const a="/storage/buckets/{bucketId}/files/{fileId}/download".replace("{bucketId}",o).replace("{fileId}",c),d={};typeof s<"u"&&(d.token=s);const r=new URL(this.client.config.endpoint+a);d.project=this.client.config.project;for(const[f,u]of Object.entries(m.flatten(d)))r.searchParams.append(f,u);return r.toString()}getFilePreview(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={bucketId:e,fileId:i[0],width:i[1],height:i[2],gravity:i[3],quality:i[4],borderWidth:i[5],borderColor:i[6],borderRadius:i[7],opacity:i[8],rotation:i[9],background:i[10],output:i[11],token:i[12]};const o=n.bucketId,c=n.fileId,s=n.width,a=n.height,d=n.gravity,r=n.quality,f=n.borderWidth,u=n.borderColor,y=n.borderRadius,w=n.opacity,I=n.rotation,j=n.background,A=n.output,M=n.token;if(typeof o>"u")throw new p('Missing required parameter: "bucketId"');if(typeof c>"u")throw new p('Missing required parameter: "fileId"');const z="/storage/buckets/{bucketId}/files/{fileId}/preview".replace("{bucketId}",o).replace("{fileId}",c),h={};typeof s<"u"&&(h.width=s),typeof a<"u"&&(h.height=a),typeof d<"u"&&(h.gravity=d),typeof r<"u"&&(h.quality=r),typeof f<"u"&&(h.borderWidth=f),typeof u<"u"&&(h.borderColor=u),typeof y<"u"&&(h.borderRadius=y),typeof w<"u"&&(h.opacity=w),typeof I<"u"&&(h.rotation=I),typeof j<"u"&&(h.background=j),typeof A<"u"&&(h.output=A),typeof M<"u"&&(h.token=M);const S=new URL(this.client.config.endpoint+z);h.project=this.client.config.project;for(const[x,B]of Object.entries(m.flatten(h)))S.searchParams.append(x,B);return S.toString()}getFileView(e,...i){let n;e&&typeof e=="object"&&!Array.isArray(e)?n=e||{}:n={bucketId:e,fileId:i[0],token:i[1]};const o=n.bucketId,c=n.fileId,s=n.token;if(typeof o>"u")throw new p('Missing required parameter: "bucketId"');if(typeof c>"u")throw new p('Missing required parameter: "fileId"');const a="/storage/buckets/{bucketId}/files/{fileId}/view".replace("{bucketId}",o).replace("{fileId}",c),d={};typeof s<"u"&&(d.token=s);const r=new URL(this.client.config.endpoint+a);d.project=this.client.config.project;for(const[f,u]of Object.entries(m.flatten(d)))r.searchParams.append(f,u);return r.toString()}}var N,D;class g{static custom(e){return e}static unique(e=7){const i=W(g,N,"m",D).call(g);let n="";for(let o=0;o<e;o++){const c=Math.floor(Math.random()*16).toString(16);n+=c}return i+n}}N=g,D=function(){const e=new Date,i=Math.floor(e.getTime()/1e3),n=e.getMilliseconds();return i.toString(16)+n.toString(16).padStart(5,"0")};var q;(function(t){t.Totp="totp"})(q||(q={}));var v;(function(t){t.Email="email",t.Phone="phone",t.Totp="totp",t.Recoverycode="recoverycode"})(v||(v={}));var R;(function(t){t.Amazon="amazon",t.Apple="apple",t.Auth0="auth0",t.Authentik="authentik",t.Autodesk="autodesk",t.Bitbucket="bitbucket",t.Bitly="bitly",t.Box="box",t.Dailymotion="dailymotion",t.Discord="discord",t.Disqus="disqus",t.Dropbox="dropbox",t.Etsy="etsy",t.Facebook="facebook",t.Figma="figma",t.Github="github",t.Gitlab="gitlab",t.Google="google",t.Linkedin="linkedin",t.Microsoft="microsoft",t.Notion="notion",t.Oidc="oidc",t.Okta="okta",t.Paypal="paypal",t.PaypalSandbox="paypalSandbox",t.Podio="podio",t.Salesforce="salesforce",t.Slack="slack",t.Spotify="spotify",t.Stripe="stripe",t.Tradeshift="tradeshift",t.TradeshiftBox="tradeshiftBox",t.Twitch="twitch",t.Wordpress="wordpress",t.Yahoo="yahoo",t.Yammer="yammer",t.Yandex="yandex",t.Zoho="zoho",t.Zoom="zoom",t.Mock="mock"})(R||(R={}));var L;(function(t){t.AvantBrowser="aa",t.AndroidWebViewBeta="an",t.GoogleChrome="ch",t.GoogleChromeIOS="ci",t.GoogleChromeMobile="cm",t.Chromium="cr",t.MozillaFirefox="ff",t.Safari="sf",t.MobileSafari="mf",t.MicrosoftEdge="ps",t.MicrosoftEdgeIOS="oi",t.OperaMini="om",t.Opera="op",t.OperaNext="on"})(L||(L={}));var U;(function(t){t.AmericanExpress="amex",t.Argencard="argencard",t.Cabal="cabal",t.Cencosud="cencosud",t.DinersClub="diners",t.Discover="discover",t.Elo="elo",t.Hipercard="hipercard",t.JCB="jcb",t.Mastercard="mastercard",t.Naranja="naranja",t.TarjetaShopping="targeta-shopping",t.UnionPay="unionpay",t.Visa="visa",t.MIR="mir",t.Maestro="maestro",t.Rupay="rupay"})(U||(U={}));var P;(function(t){t.Afghanistan="af",t.Angola="ao",t.Albania="al",t.Andorra="ad",t.UnitedArabEmirates="ae",t.Argentina="ar",t.Armenia="am",t.AntiguaAndBarbuda="ag",t.Australia="au",t.Austria="at",t.Azerbaijan="az",t.Burundi="bi",t.Belgium="be",t.Benin="bj",t.BurkinaFaso="bf",t.Bangladesh="bd",t.Bulgaria="bg",t.Bahrain="bh",t.Bahamas="bs",t.BosniaAndHerzegovina="ba",t.Belarus="by",t.Belize="bz",t.Bolivia="bo",t.Brazil="br",t.Barbados="bb",t.BruneiDarussalam="bn",t.Bhutan="bt",t.Botswana="bw",t.CentralAfricanRepublic="cf",t.Canada="ca",t.Switzerland="ch",t.Chile="cl",t.China="cn",t.CoteDIvoire="ci",t.Cameroon="cm",t.DemocraticRepublicOfTheCongo="cd",t.RepublicOfTheCongo="cg",t.Colombia="co",t.Comoros="km",t.CapeVerde="cv",t.CostaRica="cr",t.Cuba="cu",t.Cyprus="cy",t.CzechRepublic="cz",t.Germany="de",t.Djibouti="dj",t.Dominica="dm",t.Denmark="dk",t.DominicanRepublic="do",t.Algeria="dz",t.Ecuador="ec",t.Egypt="eg",t.Eritrea="er",t.Spain="es",t.Estonia="ee",t.Ethiopia="et",t.Finland="fi",t.Fiji="fj",t.France="fr",t.MicronesiaFederatedStatesOf="fm",t.Gabon="ga",t.UnitedKingdom="gb",t.Georgia="ge",t.Ghana="gh",t.Guinea="gn",t.Gambia="gm",t.GuineaBissau="gw",t.EquatorialGuinea="gq",t.Greece="gr",t.Grenada="gd",t.Guatemala="gt",t.Guyana="gy",t.Honduras="hn",t.Croatia="hr",t.Haiti="ht",t.Hungary="hu",t.Indonesia="id",t.India="in",t.Ireland="ie",t.IranIslamicRepublicOf="ir",t.Iraq="iq",t.Iceland="is",t.Israel="il",t.Italy="it",t.Jamaica="jm",t.Jordan="jo",t.Japan="jp",t.Kazakhstan="kz",t.Kenya="ke",t.Kyrgyzstan="kg",t.Cambodia="kh",t.Kiribati="ki",t.SaintKittsAndNevis="kn",t.SouthKorea="kr",t.Kuwait="kw",t.LaoPeopleSDemocraticRepublic="la",t.Lebanon="lb",t.Liberia="lr",t.Libya="ly",t.SaintLucia="lc",t.Liechtenstein="li",t.SriLanka="lk",t.Lesotho="ls",t.Lithuania="lt",t.Luxembourg="lu",t.Latvia="lv",t.Morocco="ma",t.Monaco="mc",t.Moldova="md",t.Madagascar="mg",t.Maldives="mv",t.Mexico="mx",t.MarshallIslands="mh",t.NorthMacedonia="mk",t.Mali="ml",t.Malta="mt",t.Myanmar="mm",t.Montenegro="me",t.Mongolia="mn",t.Mozambique="mz",t.Mauritania="mr",t.Mauritius="mu",t.Malawi="mw",t.Malaysia="my",t.Namibia="na",t.Niger="ne",t.Nigeria="ng",t.Nicaragua="ni",t.Netherlands="nl",t.Norway="no",t.Nepal="np",t.Nauru="nr",t.NewZealand="nz",t.Oman="om",t.Pakistan="pk",t.Panama="pa",t.Peru="pe",t.Philippines="ph",t.Palau="pw",t.PapuaNewGuinea="pg",t.Poland="pl",t.FrenchPolynesia="pf",t.NorthKorea="kp",t.Portugal="pt",t.Paraguay="py",t.Qatar="qa",t.Romania="ro",t.Russia="ru",t.Rwanda="rw",t.SaudiArabia="sa",t.Sudan="sd",t.Senegal="sn",t.Singapore="sg",t.SolomonIslands="sb",t.SierraLeone="sl",t.ElSalvador="sv",t.SanMarino="sm",t.Somalia="so",t.Serbia="rs",t.SouthSudan="ss",t.SaoTomeAndPrincipe="st",t.Suriname="sr",t.Slovakia="sk",t.Slovenia="si",t.Sweden="se",t.Eswatini="sz",t.Seychelles="sc",t.Syria="sy",t.Chad="td",t.Togo="tg",t.Thailand="th",t.Tajikistan="tj",t.Turkmenistan="tm",t.TimorLeste="tl",t.Tonga="to",t.TrinidadAndTobago="tt",t.Tunisia="tn",t.Turkey="tr",t.Tuvalu="tv",t.Tanzania="tz",t.Uganda="ug",t.Ukraine="ua",t.Uruguay="uy",t.UnitedStates="us",t.Uzbekistan="uz",t.VaticanCity="va",t.SaintVincentAndTheGrenadines="vc",t.Venezuela="ve",t.Vietnam="vn",t.Vanuatu="vu",t.Samoa="ws",t.Yemen="ye",t.SouthAfrica="za",t.Zambia="zm",t.Zimbabwe="zw"})(P||(P={}));var H;(function(t){t.GET="GET",t.POST="POST",t.PUT="PUT",t.PATCH="PATCH",t.DELETE="DELETE",t.OPTIONS="OPTIONS",t.HEAD="HEAD"})(H||(H={}));var T;(function(t){t.Center="center",t.Topleft="top-left",t.Top="top",t.Topright="top-right",t.Left="left",t.Right="right",t.Bottomleft="bottom-left",t.Bottom="bottom",t.Bottomright="bottom-right"})(T||(T={}));var E;(function(t){t.Jpg="jpg",t.Jpeg="jpeg",t.Png="png",t.Webp="webp",t.Heic="heic",t.Avif="avif",t.Gif="gif"})(E||(E={}));export{C as A,b as C,_ as D,g as I,R as O,l as Q,G as S};
